use std::collections::HashMap;

use crate::draw::Drawable;

#[derive(Debug)]
pub struct FontSprite {
    pub character: u8,
    width: usize,
    height: usize,
    pixels: Vec<u8>,
}

impl Drawable for FontSprite {
    fn width(&self) -> usize {
        self.width
    }

    fn height(&self) -> usize {
        self.height
    }

    fn pixels(&self) -> &[u8] {
        &self.pixels
    }
}

pub const CHAR_SET: [u8; 16] = [
    0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA, 0xB, 0xC, 0xD, 0xE, 0xF,
];

pub fn get_character_set() -> HashMap<u8, [u8; 5]> {
    HashMap::from([
        (0x0, [0xF0, 0x90, 0x90, 0x90, 0xF0]),
        (0x1, [0x20, 0x60, 0x20, 0x20, 0x70]),
        (0x2, [0xF0, 0x10, 0xF0, 0x80, 0xF0]),
        (0x3, [0xF0, 0x10, 0xF0, 0x10, 0xF0]),
        (0x4, [0x90, 0x90, 0xF0, 0x10, 0x10]),
        (0x5, [0xF0, 0x80, 0xF0, 0x10, 0xF0]),
        (0x6, [0xF0, 0x80, 0xF0, 0x90, 0xF0]),
        (0x7, [0xF0, 0x10, 0x20, 0x40, 0x40]),
        (0x8, [0xF0, 0x90, 0xF0, 0x90, 0xF0]),
        (0x9, [0xF0, 0x90, 0xF0, 0x10, 0xF0]),
        (0xA, [0xF0, 0x90, 0xF0, 0x90, 0x90]),
        (0xB, [0xE0, 0x90, 0xE0, 0x90, 0xE0]),
        (0xC, [0xF0, 0x80, 0x80, 0x80, 0xF0]),
        (0xD, [0xE0, 0x90, 0x90, 0x90, 0xE0]),
        (0xE, [0xF0, 0x80, 0xF0, 0x80, 0xF0]),
        (0xF, [0xF0, 0x80, 0xF0, 0x80, 0x80]),
    ])
}
